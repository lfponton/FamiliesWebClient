@page "/add-adult"
@using Models
@using FamiliesManager.Data
@inject IAdultsService service
@inject IFamiliesService familiesService
@inject NavigationManager NavigationManager
<h3>AddAdult</h3>
<AuthorizeView>
    <Authorized>
        <p>
            Family Id: <input type="number" @oninput="@(SetFamilyId)" style="width:50px"/>
        </p>
        <EditForm Model="@newAdult" OnValidSubmit="@AddNewAdult" Context="addAdultForm">
            <DataAnnotationsValidator/>
            <!-- ValidationSummary has the same name in AspNetCore and in Blazorise -->
            <Microsoft.AspNetCore.Components.Forms.ValidationSummary/>

            <div class="form-group">
                First Name:<br/>
                <InputTextArea rows="1" @bind-Value="newAdult.FirstName"/>
            </div>
            <div class="form-group">
                Last Name:<br/>
                <InputTextArea rows="1" @bind-Value="newAdult.LastName"/>
            </div>
            <div class="form-group">
                Hair Color:<br/>
                <InputTextArea rows="1" @bind-Value="newAdult.HairColor"/>
            </div>
            <div class="form-group">
                Eye Color:<br/>
                <InputTextArea rows="1" @bind-Value="newAdult.EyeColor"/>
            </div>
            <div class="form-group">
                Age:<br/>
                <InputNumber @bind-Value="newAdult.Age"/>
            </div>
            <div class="form-group">
                Height:<br/>
                <InputNumber @bind-Value="newAdult.Height"/>
            </div>
            <div class="form-group">
                Weight:<br/>
                <InputNumber @bind-Value="newAdult.Weight"/>
            </div>
            <div class="form-group">
                Sex:<br/>
                <InputTextArea rows="1" @bind-Value="newAdult.Sex"/>
            </div>
            <div class="form-group">
                JobTitle:<br/>
                <InputTextArea rows="1" @bind-Value="job.JobTitle"/>
            </div>
            <div class="form-group">
                Salary:<br/>
                <InputNumber @bind-Value="job.Salary"/>
            </div>
            <p class="actions">
                <button class="btn btn-outline-dark" disabled="@disabled" type="submit">Create</button>
            </p>
        </EditForm>
    </Authorized>
<NotAuthorized>
    <h3>Please log in to add adults.</h3>
</NotAuthorized>
</AuthorizeView>
@code {
    private Adult newAdult = new Adult();
    private Job job = new Job();
    private int? familyId;
    private bool disabled = true;
    private IList<Family> families;

    protected override async Task OnInitializedAsync()
    {
        families = familiesService.Families;
    }
    
    private void AddNewAdult()
    {
        newAdult.JobTitle = job;
        service.AddAdult(familyId, newAdult);
        NavigationManager.NavigateTo("/view-adults");
    }

    private void SetFamilyId(ChangeEventArgs changeEventArgs)
    {
        familyId = null;
        if (familyId is null)
        {
            disabled = true;
        }
        
        int max = families.Max(family => family.Id);
        
        try
        {
            familyId = int.Parse(changeEventArgs.Value.ToString());
            if (familyId <= 0 || familyId > max)
            {
                disabled = true;
            }
            else
            {
                disabled = false;
            }
        }
        catch (Exception e)
        {
        }
    }

}